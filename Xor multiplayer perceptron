Xor - multi perceptron
import numpy as np
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, Input
from tensorflow.keras.optimizers import SGD

# XOR input and output
x = np.array([[0,0], [0,1], [1,0], [1,1]])
y = np.array([[0], [1], [1], [0]])

# Build model
model = Sequential()
model.add(Input(shape=(2,)))
model.add(Dense(2, activation='sigmoid'))  # Hidden layer
model.add(Dense(1, activation='sigmoid'))  # Output layer

# Compile model
model.compile(optimizer=SGD(), loss='binary_crossentropy', metrics=['accuracy'])

print("Starting training...")
model.fit(x, y, epochs=1000, verbose=1)

# Make predictions
print("Predictions:")
predictions = model.predict(x)
print(np.round(predictions))
